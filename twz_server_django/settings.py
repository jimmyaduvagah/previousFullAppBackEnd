"""
Django settings for twz_server_django project.

Generated by 'django-admin startproject' using Django 1.9b1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os
from twz_server_django.settings_private import AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, VIMEO_ACCESS_TOKEN, \
    VIMEO_CLIENT_KEY, VIMEO_CLIENT_SECRET, DEBUG, DATABASES,IONIC_API_TOKEN, IONIC_PUSH_GROUP, GITLAB_API_TOKEN, \
    SERVER_PROTOCOL, APP_SERVER_NAME, APP_SERVER_PORT, SERVER_NAME, SERVER_PORT

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

if DEBUG:
    AWS_BUCKET_PREFIX = 'dev'
else:
    AWS_BUCKET_PREFIX = 'prod'

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
AWS_STORAGE_BUCKET_NAME = 'twz-%s' % AWS_BUCKET_PREFIX
BOTO_S3_BUCKET = 'twz-%s' % AWS_BUCKET_PREFIX
BOTO_BUCKET_LOCATION = 'EU'
AWS_S3_HOST = 's3.eu-central-1.amazonaws.com'
AWS_DEFAULT_ACL = 'private'
AWS_PUBLIC_ACL = 'public-read'
AWS_PUBLIC_STORAGE_BUCKET_NAME = 'twz-%s-public' % AWS_BUCKET_PREFIX
AWS_S3_ENCRYPTION = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c79@+j@tf8u_hia=&9813@ax%7_*v@7g5n@-b**q&t_0zc=or20'

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = [
    'platform.tunaweza.com',
    'tunaweza.com',
    'www.tunaweza.com',
    'www.localhost.com',
    '192.168.1.99',
    '10.0.1.31',
    'http://localhost:8100/',
]

if DEBUG:
    INTERNAL_IPS = ['localhost', '127.0.0.1', '[::1]', '192.168.1.99', '0.0.0.0', '192.168.0.15', '10.34.1.19', '10.0.1.3', '192.168.0.17', '10.0.1.31']
    ALLOWED_HOSTS += INTERNAL_IPS


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #our apps
    'action_log',
    'cms_locations',
    'drf_users',
    'images',
    'quizzes',
    'courses',
    'course_module_sections',
    'not_found',
    'attachments',
    'institutions',
    'user_experience',
    'dev_issues',
    # 'code_sql',
    'password_resets',
    'towns',
    'nationalities',
    'posts',
    'links',
    'connections',
    'reviews',
    'notifications',
    'emails',
    'tags',
    'surveys',
    'learning_experience_submissions',

    #3rd party
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'corsheaders',
    'django_filters',
    'mailqueue',
    'ordered_model',
    'storages',
    'debug_toolbar',
]

MIDDLEWARE_CLASSES = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'twz_server_django.middleware.exception_middleware.ExceptionUserInfoMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'twz_server_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'vimeo_api/templates',
            'emails/templates',
            'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'twz_server_django.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]

AUTH_USER_MODEL = 'drf_users.User'

# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

##### END OF 1.9b stuff

if DEBUG:

    # from twz_server_django.settings_private import SERVER_NAME, SERVER_PORT, SERVER_PROTOCOL, APP_SERVER_PORT, APP_SERVER_NAME, GITLAB_API_TOKEN
    # SERVER_NAME = '127.0.0.1'
    # SERVER_PORT = '8000'
    # SERVER_PROTOCOL = 'http://'
    # APP_SERVER_NAME = '127.0.0.1'
    # APP_SERVER_PORT = '8100'
    APP_USER_LOGGED_IN_PATH = '/'
    APP_USER_LOG_IN_PATH = '/auth/login'
    APP_USER_VERIFIED_PATH = '/auth/verified'
    APP_USER_VERIFICATION_FAILED = '/auth/verification-failed'
    APP_USER_LOG_IN_FAILED_PATH = '/auth/login/failed'
    APP_ADMIN_LOGGED_IN_PATH = '/'
    APP_ADMIN_LOG_IN_PATH = '/auth/login'
    APP_ADMIN_LOG_IN_FAILED_PATH = '/auth/login/failed'
    APP_RESET_PASSWORD_URL = '/auth/forgot-password'
    HOMEPAGE_URL = SERVER_PROTOCOL + APP_SERVER_NAME + ':' + APP_SERVER_PORT + APP_USER_LOGGED_IN_PATH
    GITLAB_API_TOKEN = GITLAB_API_TOKEN

else:
    SERVER_NAME = 'platform.tunaweza.com'
    SERVER_PORT = '443'
    SERVER_PROTOCOL = 'https://'
    APP_SERVER_NAME = 'platform.tunaweza.com'
    APP_SERVER_PORT = '443'
    APP_USER_LOGGED_IN_PATH = '/run/'
    APP_USER_LOG_IN_PATH = '/run/auth/login'
    APP_USER_LOG_IN_FAILED_PATH = '/run/auth/login/failed'
    APP_USER_VERIFIED_PATH = 'https://www.tunaweza.com/account-verified.html'
    APP_USER_VERIFICATION_FAILED = 'https://www.tunaweza.com/account-verification-failed.html'
    APP_ADMIN_LOGGED_IN_PATH = '/run/index.html'
    APP_ADMIN_LOG_IN_PATH = '/run/auth/login'
    APP_ADMIN_LOG_IN_FAILED_PATH = '/run/auth/login/failed'
    APP_RESET_PASSWORD_URL = '/run/auth/forgot-password'
    HOMEPAGE_URL = SERVER_PROTOCOL + APP_SERVER_NAME + APP_USER_LOGGED_IN_PATH
    GITLAB_API_TOKEN = GITLAB_API_TOKEN

def get_app_base_url():
    if DEBUG:
        return SERVER_PROTOCOL + APP_SERVER_NAME + ':' + APP_SERVER_PORT
    else:
        return SERVER_PROTOCOL + APP_SERVER_NAME

def get_api_base_url():
    if DEBUG:
        return SERVER_PROTOCOL + SERVER_NAME + ':' + SERVER_PORT
    else:
        return SERVER_PROTOCOL + SERVER_NAME

DEFAULT_CONTACT_FROM_EMAIL = 'Tunaweza <info@tunaweza.com>'

ADMINS = (
    ('Developers', 'developers@tunaweza.com'),
)

MANAGERS = ADMINS


LOG_PATH = os.path.join(BASE_DIR, "django.log")


if DEBUG == False:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'filters': {
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse'
            }
        },
        'handlers': {
            'mail_admins': {
                'level': 'ERROR',
                'filters': ['require_debug_false'],
                'class': 'django.utils.log.AdminEmailHandler'
            },
            'file': {
                'level': 'DEBUG',
                'class': 'logging.FileHandler',
                'filename': LOG_PATH,
            }
        },
        'loggers': {
            'django.request': {
                'handlers': ['mail_admins', 'file'],
                'level': 'ERROR',
                'propagate': True,
            },
        }
    }


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
#TODO: Make this use Postgres with a production/dev setting
if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'tunaweza_platform',
            'HOST': 'localhost',
            'PORT': '5432',
            'USER': '',
            'PASSWORD': '',
        }
    }

# if DEBUG:
#     SESSION_COOKIE_DOMAIN = '127.0.0.1'
#     SESSION_COOKIE_SECURE = False
# else:
#     SESSION_COOKIE_DOMAIN = 'tunaweza.com'
#     SESSION_COOKIE_SECURE = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

MEDIA_ROOT = os.path.join(BASE_DIR, "static/uploads")
CACHE_ROOT = os.path.join(BASE_DIR, "static/cache")
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'twz-server-django/static')
STATICFILES_DIRS = (
    # location of your application, should not be public web accessible
    os.path.join(os.path.dirname(BASE_DIR), 'twz-server-django/static_work'),
)

#CORS Settings
if DEBUG:
    CORS_ORIGIN_ALLOW_ALL = True
else:
    CORS_ORIGIN_ALLOW_ALL = True #TODO NOT SECURE FIGURE OUT WHAT WHITELIST WE NEED!!!
    CORS_ORIGIN_WHITELIST = (
        #TODO: Add the hostname we need here
        '127.0.0.1',
        '0.0.0.0',
        'tunaweza.com',
        'www.tunaweza.com'
    )

CORS_ALLOW_HEADERS = (
    'x-requested-with',
    'content-type',
    'content-disposition',
    'accept',
    'origin',
    'authorization',
    'x-csrftoken'
)


    
REST_FRAMEWORK = {
     'DEFAULT_AUTHENTICATION_CLASSES': (
         'rest_framework.authentication.TokenAuthentication',
         'rest_framework.authentication.BasicAuthentication',
         'rest_framework.authentication.SessionAuthentication',
     ),
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20,
}

REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER': 'twz_server_django.rest_extensions.TWPasswordResetSerializer',
}

OLD_PASSWORD_FIELD_ENABLED = True

env_variables = {

   'EMAIL_USE_TLS': bool('True'),
   'EMAIL_HOST': 'email-smtp.us-east-1.amazonaws.com',
   'EMAIL_HOST_USER': 'AKIAJHCGHXDYORIQI2PQ',
   'EMAIL_HOST_PASSWORD': 'ArqMxk8yFzT7p027GUNaxM3WOcyKWoTH3Sm0eZOo5eCI',
   'EMAIL_PORT': '587',

}


EMAIL_SUBJECT_PREFIX = '[%s Tunaweza] ' % 'DEV'

EMAIL_USE_TLS = env_variables['EMAIL_USE_TLS']
EMAIL_HOST = env_variables['EMAIL_HOST']
EMAIL_HOST_USER = env_variables['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = env_variables['EMAIL_HOST_PASSWORD']
EMAIL_PORT = int(env_variables['EMAIL_PORT'])
SERVER_EMAIL = 'info@tunaweza.com'
DEFAULT_FROM_EMAIL = 'info@tunaweza.com'

MAILQUEUE_QUEUE_UP = False

SOCIAL_AUTH_PIPELINE = (
    'social.pipeline.social_auth.social_details',
    'social.pipeline.social_auth.social_uid',
    'social.pipeline.social_auth.auth_allowed',
    'social.pipeline.social_auth.social_user',
    'social.pipeline.social_auth.associate_user',
    'social.pipeline.social_auth.load_extra_data',
    'social.pipeline.user.user_details',
)

